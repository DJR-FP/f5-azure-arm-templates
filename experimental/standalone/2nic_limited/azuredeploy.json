{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
	"adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password to login to the Virtual Machine."
      }
    },
    "dnsLabel": {
      "type": "string",
      "defaultValue": "REQUIRED",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
   "instanceName": {
      "type": "string",
      "defaultValue": "f52nic",
      "metadata": {
        "description": "Name of the VM"
      }
    },
    "instanceType": {
      "defaultValue": "Standard_D2_v2",
      "allowedValues": [
        "Standard_A4",
        "Standard_A9",
        "Standard_A11",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2"
      ],
      "metadata": {
        "description": "Size of the VM"
      },
      "type": "string"
    },
    "imageName": {
      "defaultValue": "Good",
      "allowedValues": [
        "Good",
        "Better",
        "Best"
      ],
      "metadata": {
        "description": "F5 SKU(IMAGE) to Deploy"
      },
      "type": "string"
    },
    "licenseKey1": {
      "type": "string",
      "defaultValue": "REQUIRED",
      "metadata": {
        "description": "The license token for the F5 Big IP(BYOL)"
      }
    },
    "restrictedSrcAddress": {
      "type": "string",
      "defaultValue": "*",
      "metadata": {
        "description": "Restricts management access to a specific network or address. Enter a IP address or address range in CIDR notation, or asterisk for all sources."
      }
    },
    "tagValues": {
      "type": "object",
      "defaultValue": {
        "application": "APP",
        "environment": "ENV",
        "group": "GROUP",
        "owner": "OWNER",
        "cost": "COST"
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "location": "[resourceGroup().location]",
    "singleQuote": "'",
    "f5CloudLibsTag": "release-2.0.0",
    "expectedHash": "965fd074eafee6b098640d7772e5969233e21df0fae95dc9e6b3ebe1c58a1d8cbcdcdd5a19cbe553a6e11be29b4680622a1836da7ec8f97cd04f6d055e7ac5b0",

    "verifyHash": "[concat(variables('singleQuote'), 'cli script /Common/verifyHash {\nproc script::run {} {\n        if {[catch {\n            set file_path [lindex $tmsh::argv 1]\n            set expected_hash ', variables('expectedHash'), '\n            set computed_hash [lindex [exec /usr/bin/openssl dgst -r -sha512 $file_path] 0]\n            if { $expected_hash eq $computed_hash } {\n                exit 0\n            }\n            tmsh::log err {Hash does not match}\n            exit 1\n        }]} {\n            tmsh::log err {Unexpected error in verifyHash}\n            exit 1\n        }\n    }\n    script-signature htxFA2OEqT6OgONuvjOMB9i/3l6xmX8yt/ypJAT7ddul2xLA7V8RN3yHXAGA+7RohkCk/o9+FYfY54fXY1cJe7MjksaJ7NITWVcytJc68cyvn3u1H37xMp8HeMR0TSgGA5h7NjWEwQod8JZZm+bGb+a1e2ex1hBAQb+Ix7ZEwsIZil25RCJTSEopkffZ7ENls13K/8DtVsgbSX0hX6kZOhoPeP9GW4+0amB99EQJVxFDMM3lcBEZx52nDdXNHgEVpoaYP0DVTAxfo2OCx0TNLPfBpUstlC/NcpVAr/15oZE5KhJpB7B4aBbGwPDql9GEnlNTeYMVXlWlunHTLBPMRg==\n}', variables('singleQuote'))]",

    "installCloudLibs": "[concat(variables('singleQuote'), '#!/bin/bash\necho about to execute\nchecks=0\nwhile [ $checks -lt 120 ]; do echo checking mcpd\n/usr/bin/tmsh -a show sys mcp-state field-fmt | grep -q running\nif [ $? == 0 ]; then\necho mcpd ready\nbreak\nfi\necho mcpd not ready yet\nlet checks=checks+1\nsleep 1\ndone\necho loading verifyHash script\n/usr/bin/tmsh load sys config merge file /config/verifyHash\nif [ $? != 0 ]; then\necho cannot validate signature of /config/verifyHash\nexit\nfi\necho loaded verifyHash\necho verifying f5-cloud-libs.targ.gz\n/usr/bin/tmsh run cli script verifyHash /config/cloud/f5-cloud-libs.tar.gz\nif [ $? != 0 ]; then\necho f5-cloud-libs.tar.gz is not valid\nexit\nfi\necho verified f5-cloud-libs.tar.gz\necho expanding f5-cloud-libs.tar.gz\ntar xvfz /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud\ntouch /config/cloud/cloudLibsReady', variables('singleQuote'))]",

    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sa2nic')]",
    "storageAccountType": "Standard_LRS",
    "imageNameToLower": "[toLower(parameters('imageName'))]",
    "skuToUse": "[concat('f5-bigip-virtual-edition-', variables('imageNameToLower'),'-byol')]",
    "availabilitySetName": "[concat(parameters('instanceName'), '-availset')]",

    "nic1Name": "[concat(parameters('instanceName'), '-mgmt1')]",
    "nic2Name": "[concat(parameters('instanceName'), '-nic2')]",
    "defaultGw": "10.0.1.1",
    "vnetName": "[concat(parameters('instanceName'), '-vnet')]",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Frontend",
    "subnet1Id": "[concat(variables('vnetId'), '/subnets/', variables('subnet1Name'))]",
    "subnet1Prefix": "10.0.1.0/24",
    "subnet1PrivateAddress": "10.0.1.4",
    "subnet2Name": "Web",
    "subnet2Id": "[concat(variables('vnetId'), '/subnets/', variables('subnet2Name'))]",
    "subnet2Prefix": "10.0.2.0/24",
    "subnet2PrivateAddress": "10.0.2.4",
    "publicIPAddressName": "[concat(parameters('dnsLabel'), '-pip')]",
    "publicIPAddressType": "Static",
    "publicIPAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups/',concat(parameters('dnsLabel'),'-nsg'))]"



  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('publicIPAddressName')]",
      "tags": {
        "displayName": "PublicIPAddress",
        "application": "[parameters('tagValues').application]",
        "environment": "[parameters('tagValues').environment]",
        "group": "[parameters('tagValues').group]",
        "owner": "[parameters('tagValues').owner]",
        "costCenter": "[parameters('tagValues').cost]"
      },
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabel')]"
        },
        "idleTimeoutInMinutes": 30,
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('vnetName')]",
      "tags": {
        "displayName": "NetworkInterface",
        "application": "[parameters('tagValues').application]",
        "environment": "[parameters('tagValues').environment]",
        "group": "[parameters('tagValues').group]",
        "owner": "[parameters('tagValues').owner]",
        "costCenter": "[parameters('tagValues').cost]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          },
          {
            "name": "[variables('subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[variables('vnetId')]",
        "[variables('publicIPAddressId')]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('dnsLabel'),'-nsg')]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('nic1Name')]",
      "tags": {
        "displayName": "NetworkInterface",
        "application": "[parameters('tagValues').application]",
        "environment": "[parameters('tagValues').environment]",
        "group": "[parameters('tagValues').group]",
        "owner": "[parameters('tagValues').owner]",
        "costCenter": "[parameters('tagValues').cost]"
      },
      "properties": {
        "networkSecurityGroup": {
          "id": "[variables('nsgID')]"
        },
        "ipConfigurations": [
          {
            "name": "[concat(parameters('instanceName'), '-ipconfig1')]",
            "properties": {
              "privateIPAddress": "[variables('subnet1PrivateAddress')]",
              "privateIPAllocationMethod": "Static",
              "PublicIpAddress": {
                "Id": "[variables('publicIPAddressId')]"
              },
              "subnet": {
                "id": "[variables('subnet1Id')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[variables('vnetId')]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('nic2Name')]",
      "tags": {
        "displayName": "NetworkInterface",
        "application": "[parameters('tagValues').application]",
        "environment": "[parameters('tagValues').environment]",
        "group": "[parameters('tagValues').group]",
        "owner": "[parameters('tagValues').owner]",
        "costCenter": "[parameters('tagValues').cost]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(parameters('instanceName'), '-ipconfig2')]",
            "properties": {
              "privateIPAddress": "[variables('subnet2PrivateAddress')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('subnet2Id')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "location": "[variables('location')]",
      "name": "[concat(parameters('dnsLabel'), '-nsg')]",
      "tags": {
        "displayName": "NetworkSecurityGroup",
        "application": "[parameters('tagValues').application]",
        "environment": "[parameters('tagValues').environment]",
        "group": "[parameters('tagValues').group]",
        "owner": "[parameters('tagValues').owner]",
        "costCenter": "[parameters('tagValues').cost]"
      },
      "properties": {
        "securityRules": [
          {
            "name": "mgmt_allow_443",
            "properties": {
              "description": "",
              "priority": 101,
              "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443",
              "protocol": "TCP",
              "direction": "Inbound",
              "access": "Allow"
            }
          },
          {
            "name": "ssh_allow_22",
            "properties": {
              "description": "",
              "priority": 102,
              "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22",
              "protocol": "TCP",
              "direction": "Inbound",
              "access": "Allow"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('availabilitySetName')]",
       "tags": {
        "displayName": "AvailabilitySet",
        "application": "[parameters('tagValues').application]",
        "environment": "[parameters('tagValues').environment]",
        "group": "[parameters('tagValues').group]",
        "owner": "[parameters('tagValues').owner]",
        "costCenter": "[parameters('tagValues').cost]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nic1Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nic2Name'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[parameters('instanceName')]",
       "tags": {
        "displayName": "VirtualMachine",
        "application": "[parameters('tagValues').application]",
        "environment": "[parameters('tagValues').environment]",
        "group": "[parameters('tagValues').group]",
        "owner": "[parameters('tagValues').owner]",
        "costCenter": "[parameters('tagValues').cost]"
      },
	  "plan": {
      	"name": "[variables('skuToUse')]",
        "publisher": "f5-networks",
        "product": "f5-big-ip"
      },
      "properties": {
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net')]"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('instanceType')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[parameters('instanceName')]",
          "adminUsername": "[parameters('adminUsername')]",
		  "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "f5-networks",
            "offer": "f5-big-ip",
            "sku": "[variables('skuToUse')]",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhds/', parameters('instanceName'), '.vhd')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('storageAccountName')]",
       "tags": {
        "displayName": "StorageAccount",
        "application": "[parameters('tagValues').application]",
        "environment": "[parameters('tagValues').environment]",
        "group": "[parameters('tagValues').group]",
        "owner": "[parameters('tagValues').owner]",
        "costCenter": "[parameters('tagValues').cost]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('instanceName'),'/start')]",
      "apiVersion": "2016-03-30",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('instanceName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "settings": {
          "fileUris": [
            "[concat('https://raw.githubusercontent.com/F5Networks/f5-cloud-libs/', variables('f5CloudLibsTag'), '/dist/f5-cloud-libs.tar.gz')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('/usr/bin/install -b -m 755 /dev/null /config/verifyHash; /usr/bin/install -b -m 755 /dev/null /config/installCloudLibs.sh; IFS=', variables('singleQuote'), '%', variables('singleQuote'), '; echo -e ', variables('verifyHash'), ' >> /config/verifyHash; echo -e ', variables('installCloudLibs'), ' >> /config/installCloudLibs.sh; unset IFS; mkdir /config/cloud && cp f5-cloud-libs.tar.gz* /config/cloud; bash /config/installCloudLibs.sh; f5-rest-node /config/cloud/f5-cloud-libs/scripts/onboard.js --output /var/log/onboard.log --log-level debug --host ', variables('subnet1PrivateAddress'), ' -u admin -p ', parameters('adminPassword'), ' --hostname ', concat(parameters('instanceName'), '.', resourceGroup().location, '.cloudapp.azure.com'), ' --update-user user:admin,password:', parameters('adminPassword'), ' --license ', parameters('licenseKey1'), ' --ntp pool.ntp.org --db tmm.maxremoteloglength:2048 --module ltm:nominal --module afm:none; f5-rest-node /config/cloud/f5-cloud-libs/scripts/network.js --output /var/log/network.log --host ', variables('subnet1PrivateAddress'), ' -u admin -p ', parameters('adminPassword'), ' --multi-nic --default-gw ', variables('defaultGw'), ' --vlan vlan_mgmt,1.0 --vlan vlan_1,1.1 --self-ip self_mgmt,', variables('subnet1PrivateAddress'), ',vlan_mgmt --self-ip self_1,', variables('subnet2PrivateAddress'), ',vlan_1 --log-level debug --background --force-reboot')]"
        }
      }
     }
  ],
  "outputs": {
    "MGMT-URL": {
      "type": "string",
      "value": "[concat('https://', parameters('dnsLabel'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
    }
  }
}
