{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "dnsLabel": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the F5 BIG-IP VE(s) for management."
      }
    },
    "instanceType": {
      "type": "string",
      "defaultValue": "Standard_A4",
      "metadata": {
        "description": "The size of the Virtual Hardware Instance."
      },
        "allowedValues": [
            "Standard_A2",
            "Standard_A3",
            "Standard_A4",
            "Standard_A9",
            "Standard_A11",
            "Standard_D2",
            "Standard_D3",
            "Standard_D4",
            "Standard_D12",
            "Standard_D13",
            "Standard_D14",
            "Standard_D2_v2",
            "Standard_D3_v2",
            "Standard_D4_v2",
            "Standard_D5_v2",
            "Standard_D12_v2",
            "Standard_D13_v2",
            "Standard_D14_v2",
            "Standard_D15_v2",
            "Standard_F2",
            "Standard_F4"
        ]
    },
    "numberOfInstances": {
      "type": "int",
      "allowedValues": [1, 2, 3, 4],
      "metadata": {
        "description": "Number of VM instances"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "subscriptionId": {
      "type": "string",
      "defaultValue": "7aa18216-6c77-40de-82a4-f14bcb08c3a0",
      "metadata": {
        "description": "Your Azure subscription ID"
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "mshimkusf5.onmicrosoft.com",
      "metadata": {
        "description": "Your Azure service principal application tenant ID"
      }
    },
    "clientId": {
      "type": "string",
      "defaultValue": "6b8b2c61-8509-4d64-a93e-9855dac815b5",
      "metadata": {
        "description": "Your Azure service principal application client ID"
      }
    },
    "servicePrincipalSecret": {
      "type": "securestring",
      "defaultValue": "TypXSeu6NQNc4i6nNLYkkDtQiQAf1okiCigtEeQvg0c=",
      "metadata": {
        "description": "Your Azure service principal application secret"
      }
    }
  },
  "variables": {
    "f5CloudLibsTag": "v1.2.0",
    "location": "[resourceGroup().location]",
    "vmssName": "[concat(parameters('dnsLabel'),'-vmss')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "[concat(parameters('dnsLabel'),'-subnet1')]",
    "subnetPrefix": "10.0.0.0/24",
    "loadBalancerName": "[concat(parameters('dnsLabel'),'-lb')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
    "virtualNetworkName": "[concat(parameters('dnsLabel'),'-vnet1')]",
    "publicIPAddressName": "[concat(parameters('dnsLabel'),'-pip')]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "storageAccountType": "Standard_LRS",
    "newStorageAccountName": "[concat(parameters('dnsLabel'),'st')]",
    "newDataStorageAccountName": "[concat(parameters('dnsLabel'),'data000')]",
    "computeApiVersion": "2016-04-30-preview",
    "networkApiVersion": "2016-06-01",
    "storageApiVersion": "2015-06-15",
    "insightsApiVersion": "2015-04-01"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('newStorageAccountName')]",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('newDataStorageAccountName')]",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabel')]"
        }
      }
    },
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "name": "[variables('loadBalancerName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "loadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "loadBalancerBackEnd"
          }
        ],
        "inboundNatPools": [
          {
            "name": "sshnatpool",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPortRangeStart": 50000,
              "frontendPortRangeEnd": 50100,
              "backendPort": 22
            }
          },
          {
            "name": "mgmtnatpool",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPortRangeStart": 50101,
              "frontendPortRangeEnd": 50200,
              "backendPort": 443
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "[variables('computeApiVersion')]",
      "name": "[variables('vmssName')]",
      "location": "[variables('location')]",
      "tags": {
        "vmsstag1": "Myriad"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "sku": {
        "name": "[parameters('instanceType')]",
        "tier": "Standard",
        "capacity": "[parameters('numberOfInstances')]"
      },
	 "plan": {
        "name": "f5-bigip-virtual-edition-1g-best-hourly",
        "publisher": "f5-networks",
        "product": "f5-big-ip-hourly"
      },
      "properties": {
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "vhdContainers": [
                "[concat('https://', variables('newStorageAccountName'), '.blob.core.windows.net/vmss1')]"
              ],
              "name": "vmssosdisk",
              "caching": "ReadOnly",
              "createOption": "FromImage"
            },
            "imageReference": {
	            "publisher": "f5-networks",
                "offer": "f5-big-ip-hourly",
                "sku": "f5-bigip-virtual-edition-1g-best-hourly",
                "version": "latest"
	          }
          },
          "osProfile": {
            "computerNamePrefix": "[variables('vmssName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic1",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "ip1",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/loadBalancerBackEnd')]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/sshnatpool')]"
                          },
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/mgmtnatpool')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
                 {
	               "name":"main",
	               "properties": {
                         "publisher": "Microsoft.Azure.Extensions",
                         "type": "CustomScript",
                         "typeHandlerVersion": "2.0",
                         "settings": {
                              "fileUris": [
                                   "[concat('https://raw.githubusercontent.com/F5Networks/f5-cloud-libs/', variables('f5CloudLibsTag'), '/scripts/azure/runScripts.js')]",
                                   "[concat('https://api.github.com/repos/F5Networks/f5-cloud-libs/tarball/', variables('f5CloudLibsTag'))]",
                                   "https://raw.githubusercontent.com/edwoodjrjr/scriptdump/master/main.sh"
                              ]
                         },
                         "protectedSettings": {
                              "commandToExecute": "[concat('bash main.sh -i ', parameters('subscriptionId'), ' -r ', resourceGroup().name, ' -v ', variables('vmssName'), ' -t ', parameters('tenantId'), ' -c ', parameters('clientId'), ' -p ', parameters('servicePrincipalSecret'), ' -u ', parameters('adminUsername'), ' -x ', parameters('adminPassword'), ' -s ', variables('f5CloudLibsTag'))]"
                         }
	               }
	          }
            ]
          }
        },
        "overprovision": "false"
      }
    },
    {
      "type": "Microsoft.Insights/autoscaleSettings",
      "apiVersion": "[variables('insightsApiVersion')]",
      "name": "autoscalehost",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]"
      ],
      "properties": {
        "name": "autoscalehost",
        "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]",
        "enabled": true,
        "profiles": [
          {
            "name": "Profile1",
            "capacity": {
              "minimum": "1",
              "maximum": "10",
              "default": "1"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "Percentage CPU",
                  "metricNamespace": "",
                  "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 60.0
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT1M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "Percentage CPU",
                  "metricNamespace": "",
                  "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 30.0
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT1M"
                }
              }
            ]
          }
        ]
      }
    }
  ],
  "outputs": {
  }
}