{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json", 
    "contentVersion": "1.0.0.0", 
    "outputs": {
        "MGMT-URL": {
            "type": "string", 
            "value": "[concat('https://', parameters('dnsLabel'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
        }
    }, 
    "parameters": {
        "adminPassword": {
            "metadata": {
                "description": "Password to login to the Virtual Machine."
            }, 
            "type": "securestring"
        }, 
        "adminUsername": {
            "defaultValue": "azureuser", 
            "metadata": {
                "description": "User name for the Virtual Machine."
            }, 
            "type": "string"
        }, 
        "dnsLabel": {
            "defaultValue": "REQUIRED", 
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }, 
            "type": "string"
        }, 
        "imageName": {
            "allowedValues": [
                "Good", 
                "Better", 
                "Best"
            ], 
            "defaultValue": "Good", 
            "metadata": {
                "description": "F5 SKU(IMAGE) to Deploy"
            }, 
            "type": "string"
        }, 
        "instanceName": {
            "defaultValue": "f5vm01", 
            "metadata": {
                "description": "Name of the VM"
            }, 
            "type": "string"
        }, 
        "instanceType": {
            "allowedValues": [
                "Standard_A4", 
                "Standard_A9", 
                "Standard_A11", 
                "Standard_D2", 
                "Standard_D3", 
                "Standard_D4", 
                "Standard_D12", 
                "Standard_D13", 
                "Standard_D14", 
                "Standard_D2_v2", 
                "Standard_D3_v2", 
                "Standard_D4_v2", 
                "Standard_D5_v2", 
                "Standard_D12_v2", 
                "Standard_D13_v2", 
                "Standard_D14_v2", 
                "Standard_D15_v2"
            ], 
            "defaultValue": "Standard_D2_v2", 
            "metadata": {
                "description": "Size of the VM"
            }, 
            "type": "string"
        }, 
        "licenseKey1": {
            "defaultValue": "REQUIRED", 
            "metadata": {
                "description": "The license token for the F5 BIG-IP(BYOL)"
            }, 
            "type": "string"
        }, 
        "restrictedSrcAddress": {
            "defaultValue": "*", 
            "metadata": {
                "description": "Restricts management access to a specific network or address. Enter a IP address or address range in CIDR notation, or asterisk for all sources."
            }, 
            "type": "string"
        }, 
        "tagValues": {
            "defaultValue": {
                "application": "APP", 
                "cost": "COST", 
                "environment": "ENV", 
                "group": "GROUP", 
                "owner": "OWNER"
            }, 
            "type": "object"
        }
    }, 
    "resources": [
        {
            "apiVersion": "[variables('apiVersion')]", 
            "location": "[resourceGroup().location]", 
            "name": "[variables('publicIPAddressName')]", 
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsLabel')]"
                }, 
                "idleTimeoutInMinutes": 30, 
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            }, 
            "tags": {
                "application": "[parameters('tagValues').application]", 
                "costCenter": "[parameters('tagValues').cost]", 
                "displayName": "PublicIPAddress", 
                "environment": "[parameters('tagValues').environment]", 
                "group": "[parameters('tagValues').group]", 
                "owner": "[parameters('tagValues').owner]"
            }, 
            "type": "Microsoft.Network/publicIPAddresses"
        }, 
        {
            "apiVersion": "[variables('apiVersion')]", 
            "location": "[resourceGroup().location]", 
            "name": "[variables('vnetName')]", 
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                }, 
                "subnets": [
                    {
                        "name": "[variables('subnet1Name')]", 
                        "properties": {
                            "addressPrefix": "[variables('subnet1Prefix')]"
                        }
                    }, 
                    {
                        "name": "[variables('subnet2Name')]", 
                        "properties": {
                            "addressPrefix": "[variables('subnet2Prefix')]"
                        }
                    }
                ]
            }, 
            "tags": {
                "application": "[parameters('tagValues').application]", 
                "costCenter": "[parameters('tagValues').cost]", 
                "displayName": "NetworkInterface", 
                "environment": "[parameters('tagValues').environment]", 
                "group": "[parameters('tagValues').group]", 
                "owner": "[parameters('tagValues').owner]"
            }, 
            "type": "Microsoft.Network/virtualNetworks"
        }, 
        {
            "apiVersion": "[variables('apiVersion')]", 
            "dependsOn": [
                "[variables('vnetId')]", 
                "[variables('publicIPAddressId')]", 
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('dnsLabel'),'-nsg')]"
            ], 
            "location": "[resourceGroup().location]", 
            "name": "[variables('nic1Name')]", 
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(parameters('instanceName'), '-ipconfig1')]", 
                        "properties": {
                            "PublicIpAddress": {
                                "Id": "[variables('publicIPAddressId')]"
                            }, 
                            "privateIPAddress": "[variables('subnet1PrivateAddress')]", 
                            "privateIPAllocationMethod": "Static", 
                            "subnet": {
                                "id": "[variables('subnet1Id')]"
                            }
                        }
                    }
                ], 
                "networkSecurityGroup": {
                    "id": "[variables('nsgID')]"
                }
            }, 
            "tags": {
                "application": "[parameters('tagValues').application]", 
                "costCenter": "[parameters('tagValues').cost]", 
                "displayName": "PublicIPAddress", 
                "environment": "[parameters('tagValues').environment]", 
                "group": "[parameters('tagValues').group]", 
                "owner": "[parameters('tagValues').owner]"
            }, 
            "type": "Microsoft.Network/networkInterfaces"
        }, 
        {
            "apiVersion": "[variables('apiVersion')]", 
            "dependsOn": [
                "[variables('vnetId')]"
            ], 
            "location": "[resourceGroup().location]", 
            "name": "[variables('nic2Name')]", 
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(parameters('instanceName'), '-ipconfig2')]", 
                        "properties": {
                            "privateIPAddress": "[variables('subnet2PrivateAddress')]", 
                            "privateIPAllocationMethod": "Static", 
                            "subnet": {
                                "id": "[variables('subnet2Id')]"
                            }
                        }
                    }
                ]
            }, 
            "tags": {
                "application": "[parameters('tagValues').application]", 
                "costCenter": "[parameters('tagValues').cost]", 
                "displayName": "NetworkInterface", 
                "environment": "[parameters('tagValues').environment]", 
                "group": "[parameters('tagValues').group]", 
                "owner": "[parameters('tagValues').owner]"
            }, 
            "type": "Microsoft.Network/networkInterfaces"
        }, 
        {
            "apiVersion": "[variables('apiVersion')]", 
            "location": "[variables('location')]", 
            "name": "[concat(parameters('dnsLabel'), '-nsg')]", 
            "properties": {
                "securityRules": [
                    {
                        "name": "mgmt_allow_443", 
                        "properties": {
                            "access": "Allow", 
                            "description": "", 
                            "destinationAddressPrefix": "*", 
                            "destinationPortRange": "443", 
                            "direction": "Inbound", 
                            "priority": 101, 
                            "protocol": "TCP", 
                            "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]", 
                            "sourcePortRange": "*"
                        }
                    }, 
                    {
                        "name": "ssh_allow_22", 
                        "properties": {
                            "access": "Allow", 
                            "description": "", 
                            "destinationAddressPrefix": "*", 
                            "destinationPortRange": "22", 
                            "direction": "Inbound", 
                            "priority": 102, 
                            "protocol": "TCP", 
                            "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]", 
                            "sourcePortRange": "*"
                        }
                    }
                ]
            }, 
            "tags": {
                "application": "[parameters('tagValues').application]", 
                "costCenter": "[parameters('tagValues').cost]", 
                "displayName": "NetworkSecurityGroup", 
                "environment": "[parameters('tagValues').environment]", 
                "group": "[parameters('tagValues').group]", 
                "owner": "[parameters('tagValues').owner]"
            }, 
            "type": "Microsoft.Network/networkSecurityGroups"
        }, 
        {
            "apiVersion": "[variables('apiVersion')]", 
            "location": "[resourceGroup().location]", 
            "name": "[variables('availabilitySetName')]", 
            "tags": {
                "application": "[parameters('tagValues').application]", 
                "costCenter": "[parameters('tagValues').cost]", 
                "displayName": "AvailabilitySet", 
                "environment": "[parameters('tagValues').environment]", 
                "group": "[parameters('tagValues').group]", 
                "owner": "[parameters('tagValues').owner]"
            }, 
            "type": "Microsoft.Compute/availabilitySets"
        }, 
        {
            "apiVersion": "[variables('apiVersion')]", 
            "location": "[resourceGroup().location]", 
            "name": "[variables('storageAccountName')]", 
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }, 
            "tags": {
                "application": "[parameters('tagValues').application]", 
                "costCenter": "[parameters('tagValues').cost]", 
                "displayName": "StorageAccount", 
                "environment": "[parameters('tagValues').environment]", 
                "group": "[parameters('tagValues').group]", 
                "owner": "[parameters('tagValues').owner]"
            }, 
            "type": "Microsoft.Storage/storageAccounts"
        }, 
        {
            "apiVersion": "[variables('apiVersion')]", 
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]", 
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]", 
                "[concat('Microsoft.Network/networkInterfaces/', variables('nic1Name'))]"
            ], 
            "location": "[resourceGroup().location]", 
            "name": "[parameters('instanceName')]", 
            "plan": {
                "name": "[variables('skuToUse')]", 
                "product": "f5-big-ip", 
                "publisher": "f5-networks"
            }, 
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                }, 
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true, 
                        "storageUri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net')]"
                    }
                }, 
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                }, 
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]", 
                            "properties": {
                                "primary": true
                            }
                        }, 
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]", 
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                }, 
                "osProfile": {
                    "adminPassword": "[parameters('adminPassword')]", 
                    "adminUsername": "[parameters('adminUsername')]", 
                    "computerName": "[parameters('instanceName')]"
                }, 
                "storageProfile": {
                    "imageReference": {
                        "offer": "f5-big-ip", 
                        "publisher": "f5-networks", 
                        "sku": "[variables('skuToUse')]", 
                        "version": "latest"
                    }, 
                    "osDisk": {
                        "caching": "ReadWrite", 
                        "createOption": "FromImage", 
                        "name": "osdisk", 
                        "vhd": {
                            "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhds/', parameters('instanceName'), '.vhd')]"
                        }
                    }
                }
            }, 
            "tags": {
                "application": "[parameters('tagValues').application]", 
                "costCenter": "[parameters('tagValues').cost]", 
                "displayName": "VirtualMachine", 
                "environment": "[parameters('tagValues').environment]", 
                "group": "[parameters('tagValues').group]", 
                "owner": "[parameters('tagValues').owner]"
            }, 
            "type": "Microsoft.Compute/virtualMachines"
        }, 
        {
            "apiVersion": "2016-03-30", 
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('instanceName'))]"
            ], 
            "location": "[variables('location')]", 
            "name": "[concat(parameters('instanceName'),'/start')]", 
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat('mkdir /config/cloud && cp f5-cloud-libs.tar.gz* /config/cloud; /usr/bin/install -b -m 755 /dev/null /config/verifyHash; /usr/bin/install -b -m 755 /dev/null /config/installCloudLibs.sh; /usr/bin/install -b -m 400 /dev/null /config/cloud/passwd; IFS=', variables('singleQuote'), '%', variables('singleQuote'), '; echo -e ', variables('verifyHash'), ' >> /config/verifyHash; echo -e ', variables('installCloudLibs'), ' >> /config/installCloudLibs.sh; echo -e ', parameters('adminPassword'), ' >> /config/cloud/passwd; unset IFS; bash /config/installCloudLibs.sh; /usr/bin/f5-rest-node /config/cloud/f5-cloud-libs/scripts/onboard.js --output /var/log/onboard.log --log-level debug --host ', variables('subnet1PrivateAddress'), ' -u admin --password-url file:///config/cloud/passwd --hostname ', concat(parameters('instanceName'), '.', resourceGroup().location, '.cloudapp.azure.com'), ' --license ', parameters('licenseKey1'), ' --ntp pool.ntp.org --db tmm.maxremoteloglength:2048 --module ltm:nominal --module afm:none; f5-rest-node /config/cloud/f5-cloud-libs/scripts/network.js --output /var/log/network.log --host ', variables('subnet1PrivateAddress'), ' -u admin -p ', parameters('adminPassword'), ' --multi-nic --default-gw ', variables('defaultGw'), ' --vlan vlan_mgmt,1.0 --vlan vlan_1,1.1 --self-ip self_mgmt,', variables('subnet1PrivateAddress'), ',vlan_mgmt --self-ip self_1,', variables('subnet2PrivateAddress'), ',vlan_1 --log-level debug --background --force-reboot; rm -f /config/cloud/passwd')]"
                }, 
                "publisher": "Microsoft.Azure.Extensions", 
                "settings": {
                    "fileUris": [
                        "[concat('https://raw.githubusercontent.com/F5Networks/f5-cloud-libs/', variables('f5CloudLibsTag'), '/dist/f5-cloud-libs.tar.gz')]"
                    ]
                }, 
                "type": "CustomScript", 
                "typeHandlerVersion": "2.0"
            }, 
            "type": "Microsoft.Compute/virtualMachines/extensions"
        }
    ], 
    "variables": {
        "addressPrefix": "10.0.0.0/16", 
        "apiVersion": "2015-06-15", 
        "availabilitySetName": "[concat(parameters('instanceName'), '-availset')]", 
        "defaultGw": "10.0.1.1", 
        "expectedHash": "8bb8ca730dce21dff6ec129a84bdb1689d703dc2b0227adcbd16757d5eeddd767fbe7d8d54cc147521ff2232bd42eebe78259069594d159eceb86a88ea137b73", 
        "f5CloudLibsTag": "v2.0.0", 
        "imageNameToLower": "[toLower(parameters('imageName'))]", 
        "installCloudLibs": "[concat(variables('singleQuote'), '#!/bin/bash\necho about to execute\nchecks=0\nwhile [ $checks -lt 120 ]; do echo checking mcpd\n/usr/bin/tmsh -a show sys mcp-state field-fmt | grep -q running\nif [ $? == 0 ]; then\necho mcpd ready\nbreak\nfi\necho mcpd not ready yet\nlet checks=checks+1\nsleep 1\ndone\necho loading verifyHash script\n/usr/bin/tmsh load sys config merge file /config/verifyHash\nif [ $? != 0 ]; then\necho cannot validate signature of /config/verifyHash\nexit\nfi\necho loaded verifyHash\necho verifying f5-cloud-libs.targ.gz\n/usr/bin/tmsh run cli script verifyHash /config/cloud/f5-cloud-libs.tar.gz\nif [ $? != 0 ]; then\necho f5-cloud-libs.tar.gz is not valid\nexit\nfi\necho verified f5-cloud-libs.tar.gz\necho expanding f5-cloud-libs.tar.gz\ntar xvfz /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud\ntouch /config/cloud/cloudLibsReady', variables('singleQuote'))]", 
        "location": "[resourceGroup().location]", 
        "nic1Name": "[concat(parameters('instanceName'), '-mgmt1')]", 
        "nic2Name": "[concat(parameters('instanceName'), '-nic2')]", 
        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups/',concat(parameters('dnsLabel'),'-nsg'))]", 
        "publicIPAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]", 
        "publicIPAddressName": "[concat(parameters('dnsLabel'), '-pip')]", 
        "publicIPAddressType": "Static", 
        "singleQuote": "'", 
        "skuToUse": "[concat('f5-bigip-virtual-edition-', variables('imageNameToLower'),'-byol')]", 
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sa1nic')]", 
        "storageAccountType": "Standard_LRS", 
        "subnet1Id": "[concat(variables('vnetId'), '/subnets/', variables('subnet1Name'))]", 
        "subnet1Name": "MGMT_Frontend", 
        "subnet1Prefix": "10.0.1.0/24", 
        "subnet1PrivateAddress": "10.0.1.4", 
        "subnet2Id": "[concat(variables('vnetId'), '/subnets/', variables('subnet2Name'))]", 
        "subnet2Name": "Web", 
        "subnet2Prefix": "10.0.2.0/24", 
        "subnet2PrivateAddress": "10.0.2.4", 
        "verifyHash": "[concat(variables('singleQuote'), 'cli script /Common/verifyHash {\nproc script::run {} {\n        if {[catch {\n            set file_path [lindex $tmsh::argv 1]\n            set expected_hash ', variables('expectedHash'), '\n            set computed_hash [lindex [exec /usr/bin/openssl dgst -r -sha512 $file_path] 0]\n            if { $expected_hash eq $computed_hash } {\n                exit 0\n            }\n            tmsh::log err {Hash does not match}\n            exit 1\n        }]} {\n            tmsh::log err {Unexpected error in verifyHash}\n            exit 1\n        }\n    }\n    script-signature fc3P5jEvm5pd4qgKzkpOFr9bNGzZFjo9pK0diwqe/LgXwpLlNbpuqoFG6kMSRnzlpL54nrnVKREf6EsBwFoz6WbfDMD3QYZ4k3zkY7aiLzOdOcJh2wECZM5z1Yve/9Vjhmpp4zXo4varPVUkHBYzzr8FPQiR6E7Nv5xOJM2ocUv7E6/2nRfJs42J70bWmGL2ZEmk0xd6gt4tRdksU3LOXhsipuEZbPxJGOPMUZL7o5xNqzU3PvnqZrLFk37bOYMTrZxte51jP/gr3+TIsWNfQEX47nxUcSGN2HYY2Fu+aHDZtdnkYgn5WogQdUAjVVBXYlB38JpX1PFHt1AMrtSIFg==\n}', variables('singleQuote'))]", 
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]", 
        "vnetName": "[concat(parameters('instanceName'), '-vnet')]"
    }
}